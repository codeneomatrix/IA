/*
  program:3
  Name: anchura.cpp
  Author: josue acevedo maldonado
  Date: 232/03/16
  Description:
*/

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "pila.cpp"


int inicio =0;
int final = 10;
int ver=0;
int pt=4; //14 para rutas largas
 
int matrix[39][39] ={{0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0}};
 
Pila pila = NULL;

bool busqueda(int ciudad,int profundidad){
	//printf("-------------------busqueda--[profundidad %d\n",profundidad);
	if(profundidad<pt){
		
		for(int j=0;j<39;j++){
			if(matrix[ciudad][j]!= 0){
				if(ver==1){
					printf("[%d]{%d}  ", j,profundidad+1);	
				}
				Push(&pila, j);
				if(j==final){
					if(ver==1){
						printf("\n \t·\t [[%d]]- ", j);
				    }
					return true;
				}else{
					if(busqueda(j,profundidad+1)){
						//printf(" [[%d]] ",j );
						return true;
					}
				}
 			
			}
		}
	}
	
	Pop(&pila);

if(ver==1){
	if(profundidad!=pt){
		//printf("⇙ {%d}",profundidad-1);	
		printf("∎");	
	}
	printf("\n");
	for (int i = 0; i < profundidad-1; ++i){
		printf("        ");
	}
}
 	return false;
 }
 




void saberciudad(int s){
		       if(s==7) printf("OAXACA");
		  else if(s==6) printf("ixtaltepec");
		  else if(s==5) printf("ixtepec");
		  else if(s==4)printf("juchitan");
		  else if(s==3)printf("tehuantepec");
		  else if(s==2)printf("puertoescondido");
		  else if(s==1)printf("huatulco");
		  else if(s==0)printf("salinacruz");
		  else if(s==8)printf("puebla");
		  else if(s==9)printf("cd mexico");
		  else if(s==10)printf("orizaba");
		  else if(s==11)printf("cordoba");
		  else if(s==12)printf("veracruz");
		  else if(s==13)printf("acayucan");
		  else if(s==14)printf("minatitlan");
		  else if(s==15)printf("coatzacoalcos");
		  else if(s==16)printf("cardenas");
		  else if(s==17)printf("villahermosa");
		  else if(s==18)printf("cd carmen");
		  else if(s==19)printf("campeche");
		  else if(s==20)printf("merida");
		  else if(s==21)printf("cancun");
		  else if(s==22)printf("playa del carmen");
		  else if(s==23)printf("chetumal");
		  else if(s==24)printf("palenque");
		  else if(s==25)printf("ocosingo");
		  else if(s==26)printf("san cristobal");
		  else if(s==27)printf("comitan");
		  else if(s==28)printf("tuxtla");
		  else if(s==29)printf("tonala");
		  else if(s==30)printf("pigiliapan");
		  else if(s==31)printf("huixtla");
		  else if(s==32)printf("tapachula");
		  else if(s==33)printf("jalapa");
		  else if(s==34)printf("pozarica");
		  else if(s==35)printf("tuxpan");
		  else if(s==36)printf("tampico");
		  else if(s==37)printf("matamoros");
		  else if(s==38)printf("reynosa");
}
 

 int  main(){
 	printf("\n\n\t\tCiudad inicial: ");
 	saberciudad(inicio);
 	printf("\n\t\tCiudad destino: ");
 	saberciudad(final);
 	printf("\n\n\n\n\t\t\t\t CALCULANDO...\n ");
 	
 	Push(&pila, inicio);
 	
 	busqueda(inicio,0);

 	printf("\n\t");
 
 	int vt =cantidad();
 	if(vt>0){
 		int ciu[vt];
 	for(int i=(vt-1); i>=0; i--){
 		ciu[i]=Pop(&pila);
 	}

 	for(int i=0; i<vt; i++){
 		saberciudad(ciu[i]);
 		printf(" ⇛ ");
 	}
 }else{
 	printf("PROFUNDIDAD INSUFICIENTE\n");
 }
 	
 	printf("\n\n");
 	
 	return 0;
 }
 


